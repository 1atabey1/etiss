name: CI

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        config:
          - {name: "Linux", os: ubuntu-latest, cmakegen: ""}
          - {name: "Windows", os: windows-latest, cmakegen: "-G \"MinGW Makefiles\""}
          - {name: "Mac", os: macOS-latest, cmakegen: ""}

    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.name }}

    steps:
    - uses: actions/checkout@v2

    - name: Requirements
      shell: bash
      run: |
        cd ..
        
    - name: Requirements (Linux)
      if: matrix.config.name == 'Linux'
      working-directory: ${{runner.workspace}}
      run: |
        sudo apt-get install libboost-system-dev libboost-filesystem-dev
        wget -O riscv-tc.tar.gz https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.3.0-2020.04.0-x86_64-linux-ubuntu14.tar.gz
        tar xf riscv-tc.tar.gz
        
    - name: Requirements (Windows)
      if: matrix.config.name == 'Windows'
      run: |
        choco install boost-msvc-14.1
        
    - name: Requirements (Mac)
      if: matrix.config.name == 'Mac'
      run: |
        brew install boost

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/install

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Install
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --target install
      
    - name: Setup tests
      working-directory: ${{runner.workspace}}/install/examples
      shell: bash
      run: |
        cd SW/riscv
        mkdir build && cd build
        cmake .. -DRISCV_ELF_GCC_PREFIX=${{runner.workspace}}/riscv-tc -DRISCV_ELF_GCC_BASENAME=riscv64-unknown-elf
        cmake --build . --config $BUILD_TYPE
        cd -
        cd bare_etiss_processor
        mkdir build && cd build
        cmake ..
        cmake --build . --config $BUILD_TYPE
        
    - name: Test (Linux)
      working-directory: ${{runner.workspace}}/install/examples/bare_etiss_processor/build
      if: matrix.config.name == 'Linux'
      shell: bash
      run: |
        ./run_helper.sh ../../SW/riscv/build/riscv_example
        ./run_helper.sh ../../SW/riscv/build/riscv_example gcc
